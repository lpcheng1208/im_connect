// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: connect.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IMPackageType int32

const (
	IMPackageType_IM_UNKNOWN        IMPackageType = 0 // 未知
	IMPackageType_IM_SIGN_IN        IMPackageType = 1 // 设备登录请求
	IMPackageType_IM_SYNC           IMPackageType = 2 // 消息同步触发
	IMPackageType_IM_HEARTBEAT      IMPackageType = 3 // 心跳
	IMPackageType_IM_MESSAGE        IMPackageType = 4 // 消息投递
	IMPackageType_IM_SUBSCRIBE_ROOM IMPackageType = 5 // 订阅房间
	IMPackageType_IM_MESSAGE_ACK    IMPackageType = 6 // 消息回包
)

// Enum value maps for IMPackageType.
var (
	IMPackageType_name = map[int32]string{
		0: "IM_UNKNOWN",
		1: "IM_SIGN_IN",
		2: "IM_SYNC",
		3: "IM_HEARTBEAT",
		4: "IM_MESSAGE",
		5: "IM_SUBSCRIBE_ROOM",
		6: "IM_MESSAGE_ACK",
	}
	IMPackageType_value = map[string]int32{
		"IM_UNKNOWN":        0,
		"IM_SIGN_IN":        1,
		"IM_SYNC":           2,
		"IM_HEARTBEAT":      3,
		"IM_MESSAGE":        4,
		"IM_SUBSCRIBE_ROOM": 5,
		"IM_MESSAGE_ACK":    6,
	}
)

func (x IMPackageType) Enum() *IMPackageType {
	p := new(IMPackageType)
	*p = x
	return p
}

func (x IMPackageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IMPackageType) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_proto_enumTypes[0].Descriptor()
}

func (IMPackageType) Type() protoreflect.EnumType {
	return &file_connect_proto_enumTypes[0]
}

func (x IMPackageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IMPackageType.Descriptor instead.
func (IMPackageType) EnumDescriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{0}
}

// 消息类型
type ImMessageType int32

const (
	ImMessageType_IM_MT_UNKNOWN  ImMessageType = 0  // 未知
	ImMessageType_IM_MT_TEXT     ImMessageType = 1  // 文本
	ImMessageType_IM_MT_FACE     ImMessageType = 2  // 表情
	ImMessageType_IM_MT_VOICE    ImMessageType = 3  // 语音消息
	ImMessageType_IM_MT_IMAGE    ImMessageType = 4  // 图片
	ImMessageType_IM_MT_FILE     ImMessageType = 5  // 文件
	ImMessageType_IM_MT_LOCATION ImMessageType = 6  // 地理位置
	ImMessageType_IM_MT_COMMAND  ImMessageType = 7  // 指令推送
	ImMessageType_IM_MT_CUSTOM   ImMessageType = 8  // 自定义
	ImMessageType_IM_MT_GIFT     ImMessageType = 9  // 礼物消息
	ImMessageType_IM_MT_VIDEO    ImMessageType = 10 // 视频消息
)

// Enum value maps for ImMessageType.
var (
	ImMessageType_name = map[int32]string{
		0:  "IM_MT_UNKNOWN",
		1:  "IM_MT_TEXT",
		2:  "IM_MT_FACE",
		3:  "IM_MT_VOICE",
		4:  "IM_MT_IMAGE",
		5:  "IM_MT_FILE",
		6:  "IM_MT_LOCATION",
		7:  "IM_MT_COMMAND",
		8:  "IM_MT_CUSTOM",
		9:  "IM_MT_GIFT",
		10: "IM_MT_VIDEO",
	}
	ImMessageType_value = map[string]int32{
		"IM_MT_UNKNOWN":  0,
		"IM_MT_TEXT":     1,
		"IM_MT_FACE":     2,
		"IM_MT_VOICE":    3,
		"IM_MT_IMAGE":    4,
		"IM_MT_FILE":     5,
		"IM_MT_LOCATION": 6,
		"IM_MT_COMMAND":  7,
		"IM_MT_CUSTOM":   8,
		"IM_MT_GIFT":     9,
		"IM_MT_VIDEO":    10,
	}
)

func (x ImMessageType) Enum() *ImMessageType {
	p := new(ImMessageType)
	*p = x
	return p
}

func (x ImMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_proto_enumTypes[1].Descriptor()
}

func (ImMessageType) Type() protoreflect.EnumType {
	return &file_connect_proto_enumTypes[1]
}

func (x ImMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImMessageType.Descriptor instead.
func (ImMessageType) EnumDescriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{1}
}

type ImSceneType int32

const (
	ImSceneType_IM_MESSAGE_SCENE ImSceneType = 0
	ImSceneType_IM_CHAT_SCENE    ImSceneType = 1
	ImSceneType_IM_MATCH_SCENE   ImSceneType = 2
	ImSceneType_IM_SYSTEM_SCENE  ImSceneType = 3
	ImSceneType_IM_COMMAND_SCENE ImSceneType = 4
)

// Enum value maps for ImSceneType.
var (
	ImSceneType_name = map[int32]string{
		0: "IM_MESSAGE_SCENE",
		1: "IM_CHAT_SCENE",
		2: "IM_MATCH_SCENE",
		3: "IM_SYSTEM_SCENE",
		4: "IM_COMMAND_SCENE",
	}
	ImSceneType_value = map[string]int32{
		"IM_MESSAGE_SCENE": 0,
		"IM_CHAT_SCENE":    1,
		"IM_MATCH_SCENE":   2,
		"IM_SYSTEM_SCENE":  3,
		"IM_COMMAND_SCENE": 4,
	}
)

func (x ImSceneType) Enum() *ImSceneType {
	p := new(ImSceneType)
	*p = x
	return p
}

func (x ImSceneType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImSceneType) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_proto_enumTypes[2].Descriptor()
}

func (ImSceneType) Type() protoreflect.EnumType {
	return &file_connect_proto_enumTypes[2]
}

func (x ImSceneType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImSceneType.Descriptor instead.
func (ImSceneType) EnumDescriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{2}
}

// 指令类型
type ImCommandType int32

const (
	ImCommandType_IM_COMMAND_UNKNOWN      ImCommandType = 0 // 未知
	ImCommandType_IM_COMMAND_CHAT_REQUEST ImCommandType = 1 // 请求通话
	ImCommandType_IM_COMMAND_CHAT_OPERATE ImCommandType = 2 // 通话操作
	ImCommandType_IM_COMMAND_CHAT_START   ImCommandType = 3 // 通话开始
	ImCommandType_IM_COMMAND_CHAT_END     ImCommandType = 4 // 通话结束
)

// Enum value maps for ImCommandType.
var (
	ImCommandType_name = map[int32]string{
		0: "IM_COMMAND_UNKNOWN",
		1: "IM_COMMAND_CHAT_REQUEST",
		2: "IM_COMMAND_CHAT_OPERATE",
		3: "IM_COMMAND_CHAT_START",
		4: "IM_COMMAND_CHAT_END",
	}
	ImCommandType_value = map[string]int32{
		"IM_COMMAND_UNKNOWN":      0,
		"IM_COMMAND_CHAT_REQUEST": 1,
		"IM_COMMAND_CHAT_OPERATE": 2,
		"IM_COMMAND_CHAT_START":   3,
		"IM_COMMAND_CHAT_END":     4,
	}
)

func (x ImCommandType) Enum() *ImCommandType {
	p := new(ImCommandType)
	*p = x
	return p
}

func (x ImCommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImCommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_proto_enumTypes[3].Descriptor()
}

func (ImCommandType) Type() protoreflect.EnumType {
	return &file_connect_proto_enumTypes[3]
}

func (x ImCommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImCommandType.Descriptor instead.
func (ImCommandType) EnumDescriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{3}
}

type ImReceiverType int32

const (
	ImReceiverType_IM_RT_UNKNOWN ImReceiverType = 0 // 未知
	ImReceiverType_IM_RT_USER    ImReceiverType = 1 // 用户
	ImReceiverType_IM_RT_GROUP   ImReceiverType = 2 // 群组
	ImReceiverType_IM_RT_ROOM    ImReceiverType = 3 // 房间
)

// Enum value maps for ImReceiverType.
var (
	ImReceiverType_name = map[int32]string{
		0: "IM_RT_UNKNOWN",
		1: "IM_RT_USER",
		2: "IM_RT_GROUP",
		3: "IM_RT_ROOM",
	}
	ImReceiverType_value = map[string]int32{
		"IM_RT_UNKNOWN": 0,
		"IM_RT_USER":    1,
		"IM_RT_GROUP":   2,
		"IM_RT_ROOM":    3,
	}
)

func (x ImReceiverType) Enum() *ImReceiverType {
	p := new(ImReceiverType)
	*p = x
	return p
}

func (x ImReceiverType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImReceiverType) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_proto_enumTypes[4].Descriptor()
}

func (ImReceiverType) Type() protoreflect.EnumType {
	return &file_connect_proto_enumTypes[4]
}

func (x ImReceiverType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImReceiverType.Descriptor instead.
func (ImReceiverType) EnumDescriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{4}
}

type ImSenderType int32

const (
	ImSenderType_IM_ST_UNKNOWN  ImSenderType = 0 // 未知的
	ImSenderType_IM_ST_SYSTEM   ImSenderType = 1 // IM系统
	ImSenderType_IM_ST_USER     ImSenderType = 2 // 用户
	ImSenderType_IM_ST_BUSINESS ImSenderType = 3 // 业务方
)

// Enum value maps for ImSenderType.
var (
	ImSenderType_name = map[int32]string{
		0: "IM_ST_UNKNOWN",
		1: "IM_ST_SYSTEM",
		2: "IM_ST_USER",
		3: "IM_ST_BUSINESS",
	}
	ImSenderType_value = map[string]int32{
		"IM_ST_UNKNOWN":  0,
		"IM_ST_SYSTEM":   1,
		"IM_ST_USER":     2,
		"IM_ST_BUSINESS": 3,
	}
)

func (x ImSenderType) Enum() *ImSenderType {
	p := new(ImSenderType)
	*p = x
	return p
}

func (x ImSenderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImSenderType) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_proto_enumTypes[5].Descriptor()
}

func (ImSenderType) Type() protoreflect.EnumType {
	return &file_connect_proto_enumTypes[5]
}

func (x ImSenderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImSenderType.Descriptor instead.
func (ImSenderType) EnumDescriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{5}
}

type ImMessageStatus int32

const (
	ImMessageStatus_IM_MS_UNKNOWN ImMessageStatus = 0 // 未知的
	ImMessageStatus_IM_MS_NORMAL  ImMessageStatus = 1 // 正常的
	ImMessageStatus_IM_MS_RECALL  ImMessageStatus = 2 // 撤回
)

// Enum value maps for ImMessageStatus.
var (
	ImMessageStatus_name = map[int32]string{
		0: "IM_MS_UNKNOWN",
		1: "IM_MS_NORMAL",
		2: "IM_MS_RECALL",
	}
	ImMessageStatus_value = map[string]int32{
		"IM_MS_UNKNOWN": 0,
		"IM_MS_NORMAL":  1,
		"IM_MS_RECALL":  2,
	}
)

func (x ImMessageStatus) Enum() *ImMessageStatus {
	p := new(ImMessageStatus)
	*p = x
	return p
}

func (x ImMessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImMessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_proto_enumTypes[6].Descriptor()
}

func (ImMessageStatus) Type() protoreflect.EnumType {
	return &file_connect_proto_enumTypes[6]
}

func (x ImMessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImMessageStatus.Descriptor instead.
func (ImMessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{6}
}

// 单条消息投递内容（估算大约100个字节）,todo 通知栏提醒
type ImMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender         *ImSender      `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`                                                         // 发送者
	ReceiverType   ImReceiverType `protobuf:"varint,2,opt,name=receiver_type,json=receiverType,proto3,enum=pb.ImReceiverType" json:"receiver_type,omitempty"` // 接收者类型，1：user;2:group
	ReceiverId     string         `protobuf:"bytes,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`                               // 用户id或者群组id
	ToUserIds      []string       `protobuf:"bytes,4,rep,name=to_user_ids,json=toUserIds,proto3" json:"to_user_ids,omitempty"`                                // 需要@的用户id列表
	MessageType    ImMessageType  `protobuf:"varint,5,opt,name=message_type,json=messageType,proto3,enum=pb.ImMessageType" json:"message_type,omitempty"`     // 消息类型
	MessageContent []byte         `protobuf:"bytes,6,opt,name=message_content,json=messageContent,proto3" json:"message_content,omitempty"`                   // 消息内容
	SendTime       int64          `protobuf:"varint,7,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`                                    // 消息发送时间戳，精确到毫秒
	MsgId          string         `protobuf:"bytes,8,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`                                              // 消息 id
	SceneType      ImSceneType    `protobuf:"varint,9,opt,name=scene_type,json=sceneType,proto3,enum=pb.ImSceneType" json:"scene_type,omitempty"`             // 0：文字聊天场景 1：视频聊天场景 2：匹配场景
}

func (x *ImMessage) Reset() {
	*x = ImMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImMessage) ProtoMessage() {}

func (x *ImMessage) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImMessage.ProtoReflect.Descriptor instead.
func (*ImMessage) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{0}
}

func (x *ImMessage) GetSender() *ImSender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *ImMessage) GetReceiverType() ImReceiverType {
	if x != nil {
		return x.ReceiverType
	}
	return ImReceiverType_IM_RT_UNKNOWN
}

func (x *ImMessage) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *ImMessage) GetToUserIds() []string {
	if x != nil {
		return x.ToUserIds
	}
	return nil
}

func (x *ImMessage) GetMessageType() ImMessageType {
	if x != nil {
		return x.MessageType
	}
	return ImMessageType_IM_MT_UNKNOWN
}

func (x *ImMessage) GetMessageContent() []byte {
	if x != nil {
		return x.MessageContent
	}
	return nil
}

func (x *ImMessage) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *ImMessage) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *ImMessage) GetSceneType() ImSceneType {
	if x != nil {
		return x.SceneType
	}
	return ImSceneType_IM_MESSAGE_SCENE
}

type ImSender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderType ImSenderType `protobuf:"varint,1,opt,name=sender_type,json=senderType,proto3,enum=pb.ImSenderType" json:"sender_type,omitempty"` // 发送者类型，1:系统,2:用户,3:第三方业务系统
	SenderId   string       `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`                             // 发送者id
	AvatarUrl  string       `protobuf:"bytes,3,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`                          // 昵称
	Nickname   string       `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`                                             // 头像
	Extra      string       `protobuf:"bytes,5,opt,name=extra,proto3" json:"extra,omitempty"`                                                   // 扩展字段
}

func (x *ImSender) Reset() {
	*x = ImSender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImSender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImSender) ProtoMessage() {}

func (x *ImSender) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImSender.ProtoReflect.Descriptor instead.
func (*ImSender) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{1}
}

func (x *ImSender) GetSenderType() ImSenderType {
	if x != nil {
		return x.SenderType
	}
	return ImSenderType_IM_ST_UNKNOWN
}

func (x *ImSender) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *ImSender) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *ImSender) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ImSender) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

// 文本消息
type ImText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // 文本消息内容
}

func (x *ImText) Reset() {
	*x = ImText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImText) ProtoMessage() {}

func (x *ImText) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImText.ProtoReflect.Descriptor instead.
func (*ImText) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{2}
}

func (x *ImText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 表情消息
type ImFace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceId  int64  `protobuf:"varint,1,opt,name=face_id,json=faceId,proto3" json:"face_id,omitempty"`
	FaceUrl string `protobuf:"bytes,2,opt,name=face_url,json=faceUrl,proto3" json:"face_url,omitempty"`
}

func (x *ImFace) Reset() {
	*x = ImFace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImFace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImFace) ProtoMessage() {}

func (x *ImFace) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImFace.ProtoReflect.Descriptor instead.
func (*ImFace) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{3}
}

func (x *ImFace) GetFaceId() int64 {
	if x != nil {
		return x.FaceId
	}
	return 0
}

func (x *ImFace) GetFaceUrl() string {
	if x != nil {
		return x.FaceUrl
	}
	return ""
}

// 语音消息
type ImVoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Md5      string `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`            // 语音包id
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"` // 语音时长
	Url      string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`            // 语音文件URL
}

func (x *ImVoice) Reset() {
	*x = ImVoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImVoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImVoice) ProtoMessage() {}

func (x *ImVoice) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImVoice.ProtoReflect.Descriptor instead.
func (*ImVoice) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{4}
}

func (x *ImVoice) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *ImVoice) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ImVoice) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 图片消息
type ImImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  int32  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`   // 图片宽度
	Height int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"` // 图片长度
	Url    string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`        // 图片URL
}

func (x *ImImage) Reset() {
	*x = ImImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImImage) ProtoMessage() {}

func (x *ImImage) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImImage.ProtoReflect.Descriptor instead.
func (*ImImage) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{5}
}

func (x *ImImage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImImage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 文件消息
type ImFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,12,opt,name=id,proto3" json:"id,omitempty"`     // 文件id
	Name string `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`  // 文件名
	Size int64  `protobuf:"varint,14,opt,name=size,proto3" json:"size,omitempty"` // 文件大小
	Url  string `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`    // 文件url
}

func (x *ImFile) Reset() {
	*x = ImFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImFile) ProtoMessage() {}

func (x *ImFile) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImFile.ProtoReflect.Descriptor instead.
func (*ImFile) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{6}
}

func (x *ImFile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ImFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ImFile) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 地理位置消息
type ImLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc      string  `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`             // 描述
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 经度
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"` // 纬度
}

func (x *ImLocation) Reset() {
	*x = ImLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImLocation) ProtoMessage() {}

func (x *ImLocation) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImLocation.ProtoReflect.Descriptor instead.
func (*ImLocation) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{7}
}

func (x *ImLocation) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ImLocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ImLocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// Command 指令推送，1000以下，IM内部用，1000以上，留给业务用
type ImCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandCode ImCommandType `protobuf:"varint,1,opt,name=command_code,json=commandCode,proto3,enum=pb.ImCommandType" json:"command_code,omitempty"` // 指令码
	CommandData []byte        `protobuf:"bytes,2,opt,name=command_data,json=commandData,proto3" json:"command_data,omitempty"`                        // 数据内容
}

func (x *ImCommand) Reset() {
	*x = ImCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImCommand) ProtoMessage() {}

func (x *ImCommand) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImCommand.ProtoReflect.Descriptor instead.
func (*ImCommand) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{8}
}

func (x *ImCommand) GetCommandCode() ImCommandType {
	if x != nil {
		return x.CommandCode
	}
	return ImCommandType_IM_COMMAND_UNKNOWN
}

func (x *ImCommand) GetCommandData() []byte {
	if x != nil {
		return x.CommandData
	}
	return nil
}

// 礼物消息
type ImGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid      int32  `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`           // 礼物 id
	Gicon    string `protobuf:"bytes,2,opt,name=gicon,proto3" json:"gicon,omitempty"`        // 礼物 icon
	Gname    string `protobuf:"bytes,3,opt,name=gname,proto3" json:"gname,omitempty"`        // 礼物 名称
	Md5      string `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`            // 礼物 md5
	Duration int32  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"` // 礼物 播放时长
}

func (x *ImGift) Reset() {
	*x = ImGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImGift) ProtoMessage() {}

func (x *ImGift) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImGift.ProtoReflect.Descriptor instead.
func (*ImGift) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{9}
}

func (x *ImGift) GetGid() int32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *ImGift) GetGicon() string {
	if x != nil {
		return x.Gicon
	}
	return ""
}

func (x *ImGift) GetGname() string {
	if x != nil {
		return x.Gname
	}
	return ""
}

func (x *ImGift) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *ImGift) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// 自定义消息
type ImCustom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // 自定义数据
}

func (x *ImCustom) Reset() {
	*x = ImCustom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImCustom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImCustom) ProtoMessage() {}

func (x *ImCustom) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImCustom.ProtoReflect.Descriptor instead.
func (*ImCustom) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{10}
}

func (x *ImCustom) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// 视频消息
type ImVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoUrl string `protobuf:"bytes,1,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"` // 视频地址
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`                // 视频时长
	Url      string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                           // 封面地址
}

func (x *ImVideo) Reset() {
	*x = ImVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImVideo) ProtoMessage() {}

func (x *ImVideo) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImVideo.ProtoReflect.Descriptor instead.
func (*ImVideo) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{11}
}

func (x *ImVideo) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *ImVideo) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ImVideo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CommandChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId   int32  `protobuf:"varint,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	Timestamp  int32  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Cid        string `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	ToId       string `protobuf:"bytes,4,opt,name=toId,proto3" json:"toId,omitempty"`
	FromId     string `protobuf:"bytes,5,opt,name=fromId,proto3" json:"fromId,omitempty"`
	Name       string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	CallType   int32  `protobuf:"varint,7,opt,name=callType,proto3" json:"callType,omitempty"`
	Channel    int32  `protobuf:"varint,8,opt,name=channel,proto3" json:"channel,omitempty"`
	Price      int32  `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`
	FromType   int32  `protobuf:"varint,10,opt,name=from_type,json=fromType,proto3" json:"from_type,omitempty"`
	Head       string `protobuf:"bytes,11,opt,name=head,proto3" json:"head,omitempty"`
	FakeCall   bool   `protobuf:"varint,12,opt,name=fakeCall,proto3" json:"fakeCall,omitempty"`
	Coin       int32  `protobuf:"varint,13,opt,name=coin,proto3" json:"coin,omitempty"`
	CreateType int32  `protobuf:"varint,14,opt,name=createType,proto3" json:"createType,omitempty"`
}

func (x *CommandChatRequest) Reset() {
	*x = CommandChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandChatRequest) ProtoMessage() {}

func (x *CommandChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandChatRequest.ProtoReflect.Descriptor instead.
func (*CommandChatRequest) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{12}
}

func (x *CommandChatRequest) GetRecordId() int32 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

func (x *CommandChatRequest) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CommandChatRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CommandChatRequest) GetToId() string {
	if x != nil {
		return x.ToId
	}
	return ""
}

func (x *CommandChatRequest) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *CommandChatRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommandChatRequest) GetCallType() int32 {
	if x != nil {
		return x.CallType
	}
	return 0
}

func (x *CommandChatRequest) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *CommandChatRequest) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CommandChatRequest) GetFromType() int32 {
	if x != nil {
		return x.FromType
	}
	return 0
}

func (x *CommandChatRequest) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

func (x *CommandChatRequest) GetFakeCall() bool {
	if x != nil {
		return x.FakeCall
	}
	return false
}

func (x *CommandChatRequest) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *CommandChatRequest) GetCreateType() int32 {
	if x != nil {
		return x.CreateType
	}
	return 0
}

type CommandChatOperate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action int32  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Cid    string `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *CommandChatOperate) Reset() {
	*x = CommandChatOperate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandChatOperate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandChatOperate) ProtoMessage() {}

func (x *CommandChatOperate) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandChatOperate.ProtoReflect.Descriptor instead.
func (*CommandChatOperate) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{13}
}

func (x *CommandChatOperate) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *CommandChatOperate) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

// 上行数据
type ImInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      IMPackageType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.IMPackageType" json:"type,omitempty"`      // 包的类型
	RequestId int64         `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求id
	Data      []byte        `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                             // 数据
}

func (x *ImInput) Reset() {
	*x = ImInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImInput) ProtoMessage() {}

func (x *ImInput) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImInput.ProtoReflect.Descriptor instead.
func (*ImInput) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{14}
}

func (x *ImInput) GetType() IMPackageType {
	if x != nil {
		return x.Type
	}
	return IMPackageType_IM_UNKNOWN
}

func (x *ImInput) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ImInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 下行数据
type ImOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      IMPackageType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.IMPackageType" json:"type,omitempty"`      // 包的类型
	RequestId int64         `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求id
	Code      int32         `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`                            // 错误码
	Message   string        `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                       // 错误信息
	Data      []byte        `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`                             // 数据
}

func (x *ImOutput) Reset() {
	*x = ImOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImOutput) ProtoMessage() {}

func (x *ImOutput) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImOutput.ProtoReflect.Descriptor instead.
func (*ImOutput) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{15}
}

func (x *ImOutput) GetType() IMPackageType {
	if x != nil {
		return x.Type
	}
	return IMPackageType_IM_UNKNOWN
}

func (x *ImOutput) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ImOutput) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ImOutput) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ImOutput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 设备登录,package_type:1
type ImSignInInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"` // 设备id
	UserId   string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 用户id
	Token    string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`                       // 秘钥
}

func (x *ImSignInInput) Reset() {
	*x = ImSignInInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImSignInInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImSignInInput) ProtoMessage() {}

func (x *ImSignInInput) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImSignInInput.ProtoReflect.Descriptor instead.
func (*ImSignInInput) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{16}
}

func (x *ImSignInInput) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ImSignInInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ImSignInInput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 设备登录,package_type:1
type ImSignInOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	Success int32  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`            // 秘钥
}

func (x *ImSignInOutput) Reset() {
	*x = ImSignInOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImSignInOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImSignInOutput) ProtoMessage() {}

func (x *ImSignInOutput) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImSignInOutput.ProtoReflect.Descriptor instead.
func (*ImSignInOutput) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{17}
}

func (x *ImSignInOutput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ImSignInOutput) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

// 订阅房间请求
type ImSubscribeRoomInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // 房间ID，如果为0，取消房间订阅
	Seq    int64 `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`                     // 消息消息序列号，
}

func (x *ImSubscribeRoomInput) Reset() {
	*x = ImSubscribeRoomInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImSubscribeRoomInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImSubscribeRoomInput) ProtoMessage() {}

func (x *ImSubscribeRoomInput) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImSubscribeRoomInput.ProtoReflect.Descriptor instead.
func (*ImSubscribeRoomInput) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{18}
}

func (x *ImSubscribeRoomInput) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *ImSubscribeRoomInput) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

// 消息投递,package_type:4
type ImMessageSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *ImMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // 消息
}

func (x *ImMessageSend) Reset() {
	*x = ImMessageSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImMessageSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImMessageSend) ProtoMessage() {}

func (x *ImMessageSend) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImMessageSend.ProtoReflect.Descriptor instead.
func (*ImMessageSend) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{19}
}

func (x *ImMessageSend) GetMessage() *ImMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_connect_proto protoreflect.FileDescriptor

var file_connect_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x22, 0xee, 0x02, 0x0a, 0x09, 0x49, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x12, 0x34, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x73, 0x67, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x08, 0x49, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x22, 0x1c, 0x0a, 0x06, 0x49, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x3c, 0x0a, 0x06, 0x49, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x49,
	0x0a, 0x07, 0x49, 0x6d, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x49, 0x0a, 0x07, 0x49, 0x6d, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x52, 0x0a, 0x06, 0x49, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x5a, 0x0a, 0x0a, 0x49, 0x6d, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x22, 0x64, 0x0a, 0x09, 0x49, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x34, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x74, 0x0a, 0x06, 0x49, 0x6d,
	0x47, 0x69, 0x66, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x64, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x1e, 0x0a, 0x08, 0x49, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x54, 0x0a, 0x07, 0x49, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xee, 0x02, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x6b, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x61, 0x6b, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x07, 0x49, 0x6d, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x4d, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x92, 0x01, 0x0a,
	0x08, 0x49, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x4d, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x5b, 0x0a, 0x0d, 0x49, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x43,
	0x0a, 0x0e, 0x49, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x14, 0x49, 0x6d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x22, 0x38, 0x0a, 0x0d, 0x49, 0x6d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2a, 0x89, 0x01, 0x0a, 0x0d, 0x49, 0x4d, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x49, 0x4e,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4d, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x49, 0x4d, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10,
	0x04, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4d, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42,
	0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4d, 0x5f, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x06, 0x2a, 0xce, 0x01, 0x0a,
	0x0d, 0x49, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x5f, 0x46, 0x41, 0x43, 0x45, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45,
	0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x5f, 0x49, 0x4d, 0x41, 0x47,
	0x45, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x5f, 0x46, 0x49, 0x4c,
	0x45, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x5f, 0x4c, 0x4f, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4d, 0x5f, 0x4d, 0x54,
	0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4d,
	0x5f, 0x4d, 0x54, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x5f, 0x47, 0x49, 0x46, 0x54, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b,
	0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x0a, 0x2a, 0x75, 0x0a,
	0x0b, 0x49, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x49, 0x4d, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4d, 0x5f, 0x4d, 0x41, 0x54, 0x43,
	0x48, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4d, 0x5f,
	0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x49, 0x4d, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x10, 0x04, 0x2a, 0x95, 0x01, 0x0a, 0x0d, 0x49, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4d, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x49, 0x4d, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x43, 0x48, 0x41,
	0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x49,
	0x4d, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4d, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4d, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e,
	0x44, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x04, 0x2a, 0x54, 0x0a, 0x0e,
	0x49, 0x6d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x49, 0x4d, 0x5f, 0x52, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x5f, 0x52, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4d, 0x5f, 0x52, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x5f, 0x52, 0x54, 0x5f, 0x52, 0x4f, 0x4f, 0x4d,
	0x10, 0x03, 0x2a, 0x57, 0x0a, 0x0c, 0x49, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4d, 0x5f, 0x53, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4d, 0x5f, 0x53, 0x54, 0x5f, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x5f, 0x53, 0x54,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4d, 0x5f, 0x53, 0x54,
	0x5f, 0x42, 0x55, 0x53, 0x49, 0x4e, 0x45, 0x53, 0x53, 0x10, 0x03, 0x2a, 0x48, 0x0a, 0x0f, 0x49,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11,
	0x0a, 0x0d, 0x49, 0x4d, 0x5f, 0x4d, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4d, 0x5f, 0x4d, 0x53, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41,
	0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4d, 0x5f, 0x4d, 0x53, 0x5f, 0x52, 0x45, 0x43,
	0x41, 0x4c, 0x4c, 0x10, 0x02, 0x42, 0x03, 0x5a, 0x01, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_connect_proto_rawDescOnce sync.Once
	file_connect_proto_rawDescData = file_connect_proto_rawDesc
)

func file_connect_proto_rawDescGZIP() []byte {
	file_connect_proto_rawDescOnce.Do(func() {
		file_connect_proto_rawDescData = protoimpl.X.CompressGZIP(file_connect_proto_rawDescData)
	})
	return file_connect_proto_rawDescData
}

var file_connect_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_connect_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_connect_proto_goTypes = []interface{}{
	(IMPackageType)(0),           // 0: pb.IMPackageType
	(ImMessageType)(0),           // 1: pb.ImMessageType
	(ImSceneType)(0),             // 2: pb.ImSceneType
	(ImCommandType)(0),           // 3: pb.ImCommandType
	(ImReceiverType)(0),          // 4: pb.ImReceiverType
	(ImSenderType)(0),            // 5: pb.ImSenderType
	(ImMessageStatus)(0),         // 6: pb.ImMessageStatus
	(*ImMessage)(nil),            // 7: pb.ImMessage
	(*ImSender)(nil),             // 8: pb.ImSender
	(*ImText)(nil),               // 9: pb.ImText
	(*ImFace)(nil),               // 10: pb.ImFace
	(*ImVoice)(nil),              // 11: pb.ImVoice
	(*ImImage)(nil),              // 12: pb.ImImage
	(*ImFile)(nil),               // 13: pb.ImFile
	(*ImLocation)(nil),           // 14: pb.ImLocation
	(*ImCommand)(nil),            // 15: pb.ImCommand
	(*ImGift)(nil),               // 16: pb.ImGift
	(*ImCustom)(nil),             // 17: pb.ImCustom
	(*ImVideo)(nil),              // 18: pb.ImVideo
	(*CommandChatRequest)(nil),   // 19: pb.CommandChatRequest
	(*CommandChatOperate)(nil),   // 20: pb.CommandChatOperate
	(*ImInput)(nil),              // 21: pb.ImInput
	(*ImOutput)(nil),             // 22: pb.ImOutput
	(*ImSignInInput)(nil),        // 23: pb.ImSignInInput
	(*ImSignInOutput)(nil),       // 24: pb.ImSignInOutput
	(*ImSubscribeRoomInput)(nil), // 25: pb.ImSubscribeRoomInput
	(*ImMessageSend)(nil),        // 26: pb.ImMessageSend
}
var file_connect_proto_depIdxs = []int32{
	8, // 0: pb.ImMessage.sender:type_name -> pb.ImSender
	4, // 1: pb.ImMessage.receiver_type:type_name -> pb.ImReceiverType
	1, // 2: pb.ImMessage.message_type:type_name -> pb.ImMessageType
	2, // 3: pb.ImMessage.scene_type:type_name -> pb.ImSceneType
	5, // 4: pb.ImSender.sender_type:type_name -> pb.ImSenderType
	3, // 5: pb.ImCommand.command_code:type_name -> pb.ImCommandType
	0, // 6: pb.ImInput.type:type_name -> pb.IMPackageType
	0, // 7: pb.ImOutput.type:type_name -> pb.IMPackageType
	7, // 8: pb.ImMessageSend.message:type_name -> pb.ImMessage
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_connect_proto_init() }
func file_connect_proto_init() {
	if File_connect_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_connect_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImSender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImFace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImVoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImCustom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandChatOperate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImSignInInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImSignInOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImSubscribeRoomInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImMessageSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_connect_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_connect_proto_goTypes,
		DependencyIndexes: file_connect_proto_depIdxs,
		EnumInfos:         file_connect_proto_enumTypes,
		MessageInfos:      file_connect_proto_msgTypes,
	}.Build()
	File_connect_proto = out.File
	file_connect_proto_rawDesc = nil
	file_connect_proto_goTypes = nil
	file_connect_proto_depIdxs = nil
}
